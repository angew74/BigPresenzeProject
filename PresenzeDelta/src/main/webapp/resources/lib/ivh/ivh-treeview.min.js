angular.module("ivh.treeview",[]);angular.module("ivh.treeview").constant("ivhTreeviewInterpolateEndSymbol","}}");angular.module("ivh.treeview").constant("ivhTreeviewInterpolateStartSymbol","{{");angular.module("ivh.treeview").directive("ivhTreeviewCheckboxHelper",[function(){"use strict";return{restrict:"A",scope:{node:"=ivhTreeviewCheckboxHelper"},require:"^ivhTreeview",link:function(n,t,i,r){var u=n.node,f=r.opts(),e=f.indeterminateAttribute,o=f.selectedAttribute;n.isSelected=u[o];n.trvw=r;n.resolveIndeterminateClick=function(){u[e]&&r.select(u,!0)};n.$watch("node."+o,function(t){n.isSelected=t});n.$watch("node."+e,function(n){t.find("input").prop("indeterminate",n)})},template:'<input type="checkbox"\nclass="ivh-treeview-checkbox"\nng-model="isSelected"\nng-click="resolveIndeterminateClick()"\nng-change="trvw.select(node, isSelected)" />'}}]);angular.module("ivh.treeview").directive("ivhTreeviewCheckbox",[function(){"use strict";return{restrict:"AE",require:"^ivhTreeview",template:'<span ivh-treeview-checkbox-helper="node"><\/span>'}}]);angular.module("ivh.treeview").directive("ivhTreeviewChildren",function(){"use strict";return{restrict:"AE",require:"^ivhTreeviewNode",template:'<ul ng-if="getChildren().length" class="ivh-treeview">\n<li ng-repeat="child in getChildren()"\nng-hide="trvw.hasFilter() && !trvw.isVisible(child)"\nclass="ivh-treeview-node"\nng-class="{\'ivh-treeview-node-collapsed\': !trvw.isExpanded(child) && !trvw.isLeaf(child)}"\nivh-treeview-node="child"\nivh-treeview-depth="childDepth">\n<\/li>\n<\/ul>'}});angular.module("ivh.treeview").directive("ivhTreeviewNode",["ivhTreeviewCompiler",function(n){"use strict";return{restrict:"A",scope:{node:"=ivhTreeviewNode",depth:"=ivhTreeviewDepth"},require:"^ivhTreeview",compile:function(t){return n.compile(t,function(n,t,i,r){var u=n.node,f=n.getChildren=function(){return r.children(u)};n.trvw=r;n.childDepth=n.depth+1;r.isExpanded(u)||r.expand(u,r.isInitiallyExpanded(n.depth));n.$watch(function(){return f().length>0},function(n){n?t.removeClass("ivh-treeview-node-leaf"):t.addClass("ivh-treeview-node-leaf")})})}}}]);angular.module("ivh.treeview").directive("ivhTreeviewToggle",[function(){"use strict";return{restrict:"A",require:"^ivhTreeview",link:function(n,t,i,r){var u=n.node;t.addClass("ivh-treeview-toggle");t.bind("click",function(){r.isLeaf(u)||n.$apply(function(){r.toggleExpanded(u);r.onToggle(u)})})}}}]);angular.module("ivh.treeview").directive("ivhTreeviewTwistie",["$compile","ivhTreeviewOptions",function(n,t){"use strict";var i=t();return{restrict:"A",require:"^ivhTreeview",template:['<span class="ivh-treeview-twistie">','<span class="ivh-treeview-twistie-collapsed">',i.twistieCollapsedTpl,"<\/span>",'<span class="ivh-treeview-twistie-expanded">',i.twistieExpandedTpl,"<\/span>",'<span class="ivh-treeview-twistie-leaf">',i.twistieLeafTpl,"<\/span>","<\/span>"].join("\n"),link:function(t,r,u,f){if(f.hasLocalTwistieTpls){var e=f.opts(),o=r.children().eq(0).children();angular.forEach(["twistieCollapsedTpl","twistieExpandedTpl","twistieLeafTpl"],function(r,u){var f=e[r],c=i[r],s,h;f&&f!==c&&((f.substr(0,1)!=="<"||f.substr(-1,1)!==">")&&(f="<span>"+f+"<\/span>"),s=n(f)(t),h=o.eq(u),h.html("").append(s))})}}}}]);angular.module("ivh.treeview").directive("ivhTreeview",["ivhTreeviewMgr",function(n){"use strict";return{restrict:"A",transclude:!0,scope:{root:"=ivhTreeview",childrenAttribute:"=ivhTreeviewChildrenAttribute",defaultSelectedState:"=ivhTreeviewDefaultSelectedState",expandToDepth:"=ivhTreeviewExpandToDepth",idAttribute:"=ivhTreeviewIdAttribute",indeterminateAttribute:"=ivhTreeviewIndeterminateAttribute",expandedAttribute:"=ivhTreeviewExpandedAttribute",labelAttribute:"=ivhTreeviewLabelAttribute",nodeTpl:"=ivhTreeviewNodeTpl",selectedAttribute:"=ivhTreeviewSelectedAttribute",onCbChange:"&ivhTreeviewOnCbChange",onToggle:"&ivhTreeviewOnToggle",twistieCollapsedTpl:"=ivhTreeviewTwistieCollapsedTpl",twistieExpandedTpl:"=ivhTreeviewTwistieExpandedTpl",twistieLeafTpl:"=ivhTreeviewTwistieLeafTpl",useCheckboxes:"=ivhTreeviewUseCheckboxes",validate:"=ivhTreeviewValidate",visibleAttribute:"=ivhTreeviewVisibleAttribute",userOptions:"=ivhTreeviewOptions",filter:"=ivhTreeviewFilter"},controllerAs:"trvw",controller:["$scope","$element","$attrs","$transclude","ivhTreeviewOptions","filterFilter",function(t,i,r,u,f,e){var h=angular,o=this,s=h.extend({},f(),t.userOptions),l,a,c;h.forEach(["childrenAttribute","defaultSelectedState","expandToDepth","idAttribute","indeterminateAttribute","expandedAttribute","labelAttribute","nodeTpl","selectedAttribute","twistieCollapsedTpl","twistieExpandedTpl","twistieLeafTpl","useCheckboxes","validate","visibleAttribute"],function(n){h.isDefined(t[n])&&(s[n]=t[n])});l=function(n){return"ivhTreeview"+n.charAt(0).toUpperCase()+n.slice(1)};h.forEach(["onCbChange","onToggle"],function(n){r[l(n)]&&(s[n]=t[n])});u(function(n,t){var i="";angular.forEach(n,function(n){i+=(n.innerHTML||"").trim()});i.length&&(a=t,s.nodeTpl=i)});o.opts=function(){return s};c=t.userOptions||{};o.hasLocalTwistieTpls=!!(c.twistieCollapsedTpl||c.twistieExpandedTpl||c.twistieLeafTpl||t.twistieCollapsedTpl||t.twistieExpandedTpl||t.twistieLeafTpl);o.children=function(n){var t=n[s.childrenAttribute];return h.isArray(t)?t:[]};o.label=function(n){return n[s.labelAttribute]};o.hasFilter=function(){return h.isDefined(t.filter)};o.getFilter=function(){return t.filter||""};o.isVisible=function(n){var t=o.getFilter(),i,r;if(!t||e([n],t).length)return!0;if(typeof t=="object"||typeof t=="function")for(i=o.children(n),r=i.length;r--;)if(o.isVisible(i[r]))return!0;return!1};o.useCheckboxes=function(){return s.useCheckboxes};o.select=function(i,r){n.select(t.root,i,s,r);o.onCbChange(i,r)};o.isSelected=function(n){return n[s.selectedAttribute]};o.toggleSelected=function(n){var t=!n[s.selectedAttribute];o.select(n,t)};o.expand=function(i,r){n.expand(t.root,i,s,r)};o.isExpanded=function(n){return n[s.expandedAttribute]};o.toggleExpanded=function(n){o.expand(n,!o.isExpanded(n))};o.isInitiallyExpanded=function(n){var t=s.expandToDepth===-1?Infinity:s.expandToDepth;return n<t};o.isLeaf=function(n){return o.children(n).length===0};o.getNodeTpl=function(){return s.nodeTpl};o.root=function(){return t.root};o.onToggle=function(n){if(s.onToggle){var i={ivhNode:n,ivhIsExpanded:o.isExpanded(n),ivhTree:t.root};s.onToggle(i)}};o.onCbChange=function(n,i){if(s.onCbChange){var r={ivhNode:n,ivhIsSelected:i,ivhTree:t.root};s.onCbChange(r)}}}],link:function(t){var i=t.trvw.opts();i.validate&&n.validate(t.root,i)},template:'<ul class="ivh-treeview">\n<li ng-repeat="child in root | ivhTreeviewAsArray"\nng-hide="trvw.hasFilter() && !trvw.isVisible(child)"\nclass="ivh-treeview-node"\nng-class="{\'ivh-treeview-node-collapsed\': !trvw.isExpanded(child) && !trvw.isLeaf(child)}"\nivh-treeview-node="child"\nivh-treeview-depth="0">\n<\/li>\n<\/ul>'}}]);angular.module("ivh.treeview").filter("ivhTreeviewAsArray",function(){"use strict";return function(n){return!angular.isArray(n)&&angular.isObject(n)?[n]:n}});angular.module("ivh.treeview").factory("ivhTreeviewBfs",["ivhTreeviewOptions",function(n){"use strict";var t=angular;return function(i,r,u){arguments.length===2&&t.isFunction(r)&&(u=r,r={});r=angular.extend({},n(),r);u=u||t.noop;var o=[],s=r.childrenAttribute,e,f,c,h,l;for(t.isArray(i)?(t.forEach(i,function(n){o.push([n,[]])}),e=o.shift()):e=[i,[]];e;){if(f=e[0],c=e[1],u(f,c)!==!1&&f[s]&&t.isArray(f[s]))for(l=f[s].length,h=0;h<l;h++)o.push([f[s][h],[f].concat(c)]);e=o.shift()}}}]);angular.module("ivh.treeview").factory("ivhTreeviewCompiler",["$compile",function(n){"use strict";return{compile:function(t,i){angular.isFunction(i)&&(i={post:i});var r;return{pre:i&&i.pre?i.pre:null,post:function(t,u,f,e){r||(r=n(e.getNodeTpl()));r(t,function(n){u.append(n)});i&&i.post&&i.post.apply(null,arguments)}}}}}]);angular.module("ivh.treeview").factory("ivhTreeviewMgr",["ivhTreeviewOptions","ivhTreeviewBfs",function(n,t){"use strict";var r=angular,u=n(),i={},o=function(n){n[this.selectedAttribute]=!1;n[this.indeterminateAttribute]=!1},s=function(n){n[this.selectedAttribute]=!0;n[this.indeterminateAttribute]=!1},h=function(n){var f=n[this.childrenAttribute],t=this.selectedAttribute,i=this.indeterminateAttribute,u=0,e=0;r.forEach(f,function(n){n[t]?u++:n[i]&&e++});0===u&&0===e?(n[t]=!1,n[i]=!1):u===f.length?(n[t]=!0,n[i]=!1):(n[t]=!1,n[i]=!0)},e=function(n,i,r,u){var h=f(i),e=!0,c=r.idAttribute,o=null,s=[];return t(n,r,function(n,t){var r=e&&(h?i===n[c]:i===n);return r&&(e=!1,o=n,s=t),e}),u(o,s)},f=function(n){return r.isString(n)||r.isNumber(n)};return i.select=function(n,e,c,l){arguments.length>2&&typeof c=="boolean"&&(l=c,c={});c=r.extend({},u,c);l=r.isDefined(l)?l:!0;var v=f(e),a=!0,y=c.idAttribute;return t(n,c,function(n,i){var f=a&&(v?e===n[y]:e===n),u;return f&&(a=!1,u=l?s.bind(c):o.bind(c),t(n,c,u),r.forEach(i,h.bind(c))),a}),i},i.selectAll=function(n,f,e){arguments.length>1&&typeof f=="boolean"&&(e=f,f={});f=r.extend({},u,f);e=r.isDefined(e)?e:!0;var o=f.selectedAttribute,s=f.indeterminateAttribute;return t(n,f,function(n){n[o]=e;n[s]=!1}),i},i.selectEach=function(n,t,u,f){return r.forEach(t,function(t){i.select(n,t,u,f)}),i},i.deselect=function(n,t,r){return i.select(n,t,r,!1)},i.deselectAll=function(n,t){return i.selectAll(n,t,!1)},i.deselectEach=function(n,t,r){return i.selectEach(n,t,r,!1)},i.validate=function(n,f,e){if(!n)return i;arguments.length>1&&typeof f=="boolean"&&(e=f,f={});f=r.extend({},u,f);e=r.isDefined(e)?e:f.defaultSelectedState;var o=f.selectedAttribute,s=f.indeterminateAttribute;return t(n,f,function(t){if(r.isDefined(t[o])&&t[o]!==e)return i.select(n,t,f,!e),!1;t[o]=e;t[s]=!1}),i},i.expand=function(n,t,o,s){arguments.length>2&&typeof o=="boolean"&&(s=o,o={});o=r.extend({},u,o);s=r.isDefined(s)?s:!0;var c=f(t),h=o.expandedAttribute;return c?e(n,t,o,function(n){return n[h]=s,i}):(t[h]=s,i)},i.expandRecursive=function(n,o,s,h){arguments.length>2&&typeof s=="boolean"&&(h=s,s={});o=r.isDefined(o)?o:n;s=r.extend({},u,s);h=r.isDefined(h)?h:!0;var l=f(o),a=s.expandedAttribute,c;return l?e(n,o,s,function(n){c=n}):c=o,c&&t(c,s,function(n){n[a]=h}),i},i.collapse=function(n,t,r){return i.expand(n,t,r,!1)},i.collapseRecursive=function(n,t,r){return i.expandRecursive(n,t,r,!1)},i.expandTo=function(n,t,f,o){arguments.length>2&&typeof f=="boolean"&&(o=f,f={});f=r.extend({},u,f);o=r.isDefined(o)?o:!0;var s=f.expandedAttribute,h=function(n){n[s]=o};return e(n,t,f,function(n,t){return r.forEach(t,h),i})},i.collapseParents=function(n,t,r){return i.expandTo(n,t,r,!1)},i}]);angular.module("ivh.treeview").provider("ivhTreeviewOptions",["ivhTreeviewInterpolateStartSymbol","ivhTreeviewInterpolateEndSymbol",function(n,t){"use strict";var r=n,u=t,i={idAttribute:"id",labelAttribute:"label",childrenAttribute:"children",selectedAttribute:"selected",expandToDepth:0,useCheckboxes:!0,validate:!0,indeterminateAttribute:"__ivhTreeviewIndeterminate",expandedAttribute:"__ivhTreeviewExpanded",defaultSelectedState:!0,twistieExpandedTpl:"(-)",twistieCollapsedTpl:"(+)",twistieLeafTpl:"o",nodeTpl:'<div class="ivh-treeview-node-content" title="{{trvw.label(node)}}">\n<span ivh-treeview-toggle>\n<span class="ivh-treeview-twistie-wrapper" ivh-treeview-twistie><\/span>\n<\/span>\n<span class="ivh-treeview-checkbox-wrapper" ng-if="trvw.useCheckboxes()"\nivh-treeview-checkbox>\n<\/span>\n<span class="ivh-treeview-node-label" ivh-treeview-toggle>\n{{trvw.label(node)}}\n<\/span>\n<div ivh-treeview-children><\/div>\n<\/div>'.replace(new RegExp("{{","g"),r).replace(new RegExp("}}","g"),u)};this.set=function(n){angular.extend(i,n)};this.$get=function(){return function(){return angular.copy(i)}}}]);
//# sourceMappingURL=ivh-treeview.min.js.map
